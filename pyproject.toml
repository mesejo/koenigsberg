[build-system]
requires = ["maturin>=1.2,<2.0"]
build-backend = "maturin"

[project]
name = "koenigsberg"
dynamic = ["version"]
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
description = "A really cool placeholder project for testing ideas"
authors = [{ name = "Daniel Mesejo", email = "mesejoleon@gmail.com" }]
dependencies = [
    "ibis-framework==9.0.0 ; python_version >= '3.10' and python_version < '4.0'",
    "dask==2023.12.1 ; python_version >= '3.10' and python_version < '4.0'",
    "attrs==24.2.0; python_version >= '3.10' and python_version < '4.0'",
    "connectorx>=0.3.2,<1 ; python_version >= '3.10' and python_version < '4.0'",
    "psycopg2-binary==2.9.9 ; python_version >= '3.10' and python_version < '4.0'",
    "sqlalchemy==2.0.35; python_version >= '3.10' and python_version < '4.0'",
    "pyarrow>=13.0.0,<18; python_version >= '3.10' and python_version < '4.0'",
    "palmerpenguins==0.1.4 ; python_version >= '3.10' and python_version < '4.0'",
    "structlog==24.4.0; python_version >= '3.10' and python_version < '4.0'",
    "pytest==8.3.3; python_version >= '3.10' and python_version < '4.0'",
    "pytest-mock==3.14.0 ; python_version >= '3.10' and python_version < '4.0'",
]



[tool.maturin]
module-name = "koenigsberg._internal"
python-source = "python"
features = ["pyo3/extension-module"]

[tool.poetry]
name = "koenigsberg"
version = "0"
description = ""
authors = ["Daniel Mesejo <mesejo@letsql.com>"]
packages = [
	{ include = "koenigsberg", from = "python" },
]

[tool.poetry.dependencies]
python = "^3.10"
maturin = "^1.4.0"
ibis-framework = "9.0.0"
dask = "^2023.12.1"
attrs = "^23.2.0 || ^24.0.0"
connectorx = ">=0.3.2,<1"
psycopg2-binary = "^2.9.9"
sqlalchemy = "^2.0.25"
pyarrow = ">=13.0.0,<18"
duckdb = {version = "^0.10.3", optional = true}
snowflake-connector-python = {version = "^3.10.1", optional = true}
datafusion = {version = "^34.0.0", optional = true}
palmerpenguins = "^0.1.4"
structlog = "^24.2.0"
pytest-mock = "^3.14.0"

[tool.poetry.group.dev.dependencies]
black = "24.8.0"
blackdoc = "0.3.9"
codespell = {version = "2.3.0", extras = ["hard-encoding-detection", "toml"]}
coverage = {version = "7.6.1", extras = ["toml"]}
git-cliff = "^2.2.1"
ipython = "^8.19.0"
pre-commit = "3.8.0"
pytest = "8.3.3"
pytest-cov = "5.0.0"
ruff = "0.6.7"

[tool.poetry.group.test.dependencies]
scikit-learn = "^1.4.0"
xgboost = ">=1.6.1"

[tool.poetry.group.docs.dependencies]
quartodoc = "^0.7.2"
nbformat = "^5.10.4"
nbclient = "^0.10.0"
ipykernel = "^6.29.4"

[tool.poetry.extras]
datafusion = ["datafusion"]
duckdb = ["duckdb"]
snowflake = ["snowflake-connector-python"]


[tool.codespell]
skip = "*.lock,.direnv,.git,docs/_freeze/**/html.json"
ignore-regex = '\b(DOUB|i[if]f|I[IF]F|lamduh|AFE|crate|ba)\b'
builtin = "clear,rare,names"
