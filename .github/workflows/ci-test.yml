name: ci-test

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read


jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        target: [x86_64, x86, aarch64]
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: download test data
        run: just download-data

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Rust latest
        run: rustup update

      - name: cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./target/
          key: cargo-cache-${{ matrix.python-version }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.toml', '**/Cargo.lock') }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install the project
        run: uv sync --all-extras --all-groups --no-install-project

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: 'develop'
          target: ${{ matrix.target }}
          sccache: 'true'
          manylinux: ${{ matrix.target == 'aarch64' && '2_28' || 'auto' }}

      - name: poetry pytest
        run: uv run pytest --cov --cov-report=xml
        working-directory: ${{ github.workspace }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
